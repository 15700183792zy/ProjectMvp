package www.zhouyan.project.modle.dao;


import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.util.Log;

import org.greenrobot.greendao.AbstractDaoMaster;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseOpenHelper;
import org.greenrobot.greendao.database.StandardDatabase;
import org.greenrobot.greendao.identityscope.IdentityScopeType;

import www.zhouyan.project.modle.CompanyConfigsDao;
import www.zhouyan.project.modle.CustomerDao;
import www.zhouyan.project.modle.ExpressDao;
import www.zhouyan.project.modle.GoodsinfoDao;
import www.zhouyan.project.modle.OrderListTableDao;
import www.zhouyan.project.modle.PayDao;
import www.zhouyan.project.modle.PicDictSaveDao;
import www.zhouyan.project.modle.ProColorsDao;
import www.zhouyan.project.modle.ProSizesDao;
import www.zhouyan.project.modle.ShopDao;
import www.zhouyan.project.modle.SkuDao;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * Master of DAO (schema version 1): knows all DAOs.
 */
public class DaoMaster2 extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /**
     * Creates underlying database table using DAOs.
     */
    public static void createAllTables(Database db, boolean ifNotExists) {
        CompanyConfigsDao.createTable(db, ifNotExists); //配置
        GoodsinfoDao.createTable(db, ifNotExists); //商品
        ShopDao.createTable(db, ifNotExists);//门店
        CustomerDao.createTable(db, ifNotExists);//客户
        PayDao.createTable(db, ifNotExists);//门店账户
        OrderListTableDao.createTable(db, ifNotExists);//单据列表
        SkuDao.createTable(db, ifNotExists);//商品sku
        PicDictSaveDao.createTable(db, ifNotExists);//字典
        ProColorsDao.createTable(db, ifNotExists);//颜色
        ProSizesDao.createTable(db,ifNotExists);//尺码

        ExpressDao.createTable(db, ifNotExists);//物流
    }

    /**
     * Drops underlying database table using DAOs.
     */
    public static void dropAllTables(Database db, boolean ifExists) {
        CompanyConfigsDao.dropTable(db, ifExists);
        GoodsinfoDao.dropTable(db, ifExists);
        ShopDao.dropTable(db, ifExists);
        CustomerDao.dropTable(db, ifExists);
        PayDao.dropTable(db, ifExists);
        OrderListTableDao.dropTable(db, ifExists);
        SkuDao.dropTable(db,ifExists);
        PicDictSaveDao.dropTable(db, ifExists);
        ProColorsDao.dropTable(db, ifExists);
        ProSizesDao.dropTable(db, ifExists);
        ExpressDao.dropTable(db, ifExists);
    }

    /**
     * WARNING: Drops all table on Upgrade! Use only during development.
     * Convenience method using a {@link DevOpenHelper}.
     */
    public static DaoSession2 newDevSession(Context context, String name) {
        Database db = new DevOpenHelper(context, name).getWritableDb();
        DaoMaster2 daoMaster = new DaoMaster2(db);
        return daoMaster.newSession();
    }

    public DaoMaster2(SQLiteDatabase db) {
        this(new StandardDatabase(db));
    }

    public DaoMaster2(Database db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(CompanyConfigsDao.class);
        registerDaoClass(GoodsinfoDao.class);
        registerDaoClass(ShopDao.class);
        registerDaoClass(CustomerDao.class);
        registerDaoClass(PayDao.class);
        registerDaoClass(OrderListTableDao.class);
        registerDaoClass(SkuDao.class);
        registerDaoClass(PicDictSaveDao.class);
        registerDaoClass(ProColorsDao.class);
        registerDaoClass(ProSizesDao.class);
        registerDaoClass(ExpressDao.class);
    }

    public DaoSession2 newSession() {
        return new DaoSession2(db, IdentityScopeType.Session, daoConfigMap);
    }

    public DaoSession2 newSession(IdentityScopeType type) {
        return new DaoSession2(db, type, daoConfigMap);
    }

    /**
     * Calls {@link #createAllTables(Database, boolean)} in {@link #onCreate(Database)} -
     */
    public static abstract class OpenHelper extends DatabaseOpenHelper {
        public OpenHelper(Context context, String name) {
            super(context, name, SCHEMA_VERSION);
        }

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(Database db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }

    /**
     * WARNING: Drops all table on Upgrade! Use only during development.
     */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name) {
            super(context, name);
        }

        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(Database db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }
}
